CREATE DATABASE ORG;

SHOW DATABASES;

USE ORG;

CREATE TABLE WORKER (
	WORKER_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME CHAR(25),
    LAST_NAME CHAR(25),
    SALARY NUMERIC(15),
    JOINING_DATE DATETIME,
    DEPARTMENT CHAR(25)
);

INSERT INTO WORKER
	(FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		('Monika', 'Arora', 100000, '21-02-20 09:00:00', 'HR'),
		('Niharika', 'Verma', 80000, '21-06-11 09:00:00', 'Admin'),
		('Vishal', 'Singhal', 300000, '21-02-20 09:00:00', 'HR'),
		('Mohan', 'Sarah', 300000, '12-03-19 09:00:00', 'Admin'),
		('Amitabh', 'Singh', 500000, '21-02-20 09:00:00', 'Admin'),
		('Vivek', 'Bhati', 490000, '21-06-11 09:00:00', 'Admin'),
		('Vipul', 'Diwan', 200000, '21-06-11 09:00:00', 'Account'),
		('Satish', 'Kumar', 75000, '21-01-20 09:00:00', 'Account'),
		('Geetika', 'Chauhan', 90000, '21-04-11 09:00:00', 'Admin');
        
SELECT * FROM WORKER;

CREATE TABLE BONUS (
	WORKER_REF_ID INTEGER,
	BONUS_AMOUNT NUMERIC(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID)
);

SELECT * FROM BONUS;

-- Task 1:
INSERT INTO BONUS (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
	(6, 32000, '2021-11-02'),
    (6, 20000, '2022-11-02'),
    (5, 21000, '2021-11-02'),
	(9, 30000, '2021-11-02'),
    (8, 4500, '2022-11-02');

-- Task 2:    
WITH FIRST_TWO AS(
SELECT SALARY
FROM WORKER
ORDER BY SALARY DESC
LIMIT 2)
SELECT MIN(SALARY) AS SECOND_HIGHEST_SALARY
FROM FIRST_TWO;

-- Task 3:
WITH HIGHEST_SAL AS (
SELECT DEPARTMENT, MAX(SALARY) AS MAX_SALARY
FROM WORKER
GROUP BY DEPARTMENT)
SELECT H.DEPARTMENT, CONCAT(W.FIRST_NAME, ' ', W.LAST_NAME) AS NAME_OF_EMPLOYEE
FROM HIGHEST_SAL H LEFT JOIN WORKER W ON H.MAX_SALARY = W.SALARY AND H.DEPARTMENT = W.DEPARTMENT;

-- Task 4:
SELECT DISTINCT CONCAT(W1.FIRST_NAME, ' ', W1.LAST_NAME) AS EMPLOYEE_NAME, W1.SALARY
FROM WORKER W1 INNER JOIN WORKER W2 WHERE W1.WORKER_ID <> W2.WORKER_ID AND W1.SALARY = W2.SALARY;

-- Task 5:
SELECT CONCAT(W.FIRST_NAME, ' ', W.LAST_NAME) AS WORKER_NAME
FROM WORKER W LEFT JOIN BONUS B ON W.WORKER_ID = B.WORKER_REF_ID
WHERE BONUS_AMOUNT IS NOT NULL AND YEAR(BONUS_DATE) = '2021';

-- Task 6:
TRUNCATE WORKER;
-- The table has a foreign key.

-- Task 7:
DROP TABLE WORKER;
-- The table has a foreign key.